<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2024
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~
  ~
  -->
<project>

  <artifactId>XMLBlog</artifactId>
  <build>
    <pluginManagement>

      <plugins>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <configuration>
            <nohelp>true</nohelp>
            <show>private</show>
          </configuration>
          <groupId>org.apache.maven.plugins</groupId>
          <version>3.6.3</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <proc>full</proc>
            <source>${maven.compiler.plugin.source}</source>
            <target>${maven.compiler.plugin.target}</target>

          </configuration>
          <executions>
            <execution>
              <configuration>
                <source>${maven.compiler.plugin.source}</source>
                <target>${maven.compiler.plugin.target}</target>
              </configuration>
              <goals>
                <goal>compile</goal>
              </goals>
              <id>default-compile</id>
              <phase>compile</phase>
            </execution>
            <execution>
              <configuration>
                <source>${maven.compiler.plugin.source}</source>
                <target>${maven.compiler.plugin.target}</target>
              </configuration>
              <goals>
                <goal>testCompile</goal>
              </goals>
              <id>default-testCompile</id>
              <phase>test-compile</phase>
            </execution>
          </executions>
          <groupId>org.apache.maven.plugins</groupId>
          <version>3.11.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>3.2.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>3.5.0</version>
        </plugin>

      </plugins>

    </pluginManagement>

    <plugins>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <executions>

          <execution>
            <configuration>
              <sourceDirectories>
                <sourceDirectory>src/test/java</sourceDirectory>
                <sourceDrectory>src/main/java</sourceDrectory>
              </sourceDirectories>
              <suppressionsLocation>${checkstyle.suppressions.Location}</suppressionsLocation>

            </configuration>
            <goals>

              <goal>check</goal>
            </goals>
            <id>validate</id>
            <phase>validate</phase>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.3.1</version>
      </plugin>
      <plugin>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <id>prepare-agent</id>
          </execution>
          <execution>
            <goals>
              <goal>report</goal>
            </goals>
            <id>report</id>
          </execution>
        </executions>
        <groupId>org.jacoco</groupId>
        <version>${jacoco.version}</version>
      </plugin>

      <plugin>
        <artifactId>rewrite-maven-plugin</artifactId>
        <configuration>
          <activeRecipes>
            <recipe>org.openrewrite.java.dependencies.DependencyVulnerabilityCheck</recipe>
            <recipe>org.openrewrite.java.OrderImports</recipe>
            <recipe>org.openrewrite.staticanalysis.CodeCleanup</recipe>
            <recipe>org.openrewrite.java.format.EmptyNewlineAtEndOfFile</recipe>
            <recipe>org.openrewrite.xml.format.NormalizeLineBreaks</recipe>

          </activeRecipes>
          <activeStyles>
            <style>org.openrewrite.java.GoogleJavaFormat</style>
          </activeStyles>
        </configuration>
        <dependencies>
          <dependency>
            <artifactId>rewrite-java-dependencies</artifactId>
            <groupId>org.openrewrite.recipe</groupId>
            <version>1.6.0</version>
          </dependency>
          <dependency>
            <artifactId>rewrite-static-analysis</artifactId>
            <groupId>org.openrewrite.recipe</groupId>
            <version>1.4.2</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <goals>
              <goal>run</goal>
            </goals>
            <id>clean up</id>
            <phase>compile</phase>

          </execution>
        </executions>
        <groupId>org.openrewrite.maven</groupId>
        <version>5.26.0</version>
      </plugin>
      <plugin>
        <artifactId>apache-rat-plugin</artifactId>
        <configuration>
          <numUnapprovedLicenses>1</numUnapprovedLicenses>
        </configuration>
        <executions>
          <execution>
            <goals>

              <goal>check</goal>

            </goals>
            <id>check that all files are licensed</id>
            <phase>compile</phase>
          </execution>
        </executions>
        <groupId>org.apache.rat</groupId>
        <version>0.13</version>
      </plugin>

      <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>

        <groupId>org.apache.maven.plugins</groupId>
        <version>3.5.0</version>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
            </goals>
            <id>integration-testing</id>
            <phase>test</phase>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
        <version>2.22.2</version>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>${maven.compiler.plugin.source}</version>
                </requireJavaVersion>

              </rules>
            </configuration>
            <goals>
              <goal>enforce</goal>
            </goals>
            <id>enforce</id>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.4.1</version>
      </plugin>
      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <dependencies>
          <!-- https://mvnrepository.com/artifact/org.apache.maven.skins/maven-fluido-skin -->
          <dependency>
            <artifactId>maven-fluido-skin</artifactId>
            <groupId>org.apache.maven.skins</groupId>
            <version>2.0.0-M8</version>
          </dependency>

        </dependencies>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.12.1</version>

      </plugin>

    </plugins>
  </build>
  <dependencies>


    <dependency>
      <artifactId>junit-jupiter-api</artifactId>
      <groupId>org.junit.jupiter</groupId>
      <scope>test</scope>
      <version>${junit-jupiter-version}</version>
    </dependency>


    <dependency>
      <artifactId>commons-lang</artifactId>
      <groupId>commons-lang</groupId>
      <version>${commons.lang.version}</version>
    </dependency>
    <dependency>
      <artifactId>dom4j</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>xml-apis</artifactId>
          <groupId>xml-apis</groupId>
        </exclusion>
      </exclusions>
      <groupId>org.dom4j</groupId>

      <scope>compile</scope>
      <version>${dom4j.version}</version>
    </dependency>
    <dependency>
      <artifactId>jaxen</artifactId>
      <groupId>jaxen</groupId>
      <version>1.1.4</version>
    </dependency>
    <dependency>
      <artifactId>commons-io</artifactId>
      <groupId>commons-io</groupId>
      <version>${commons.io.version}</version>
    </dependency>
    <dependency>
      <artifactId>spring-test</artifactId>
      <groupId>org.springframework</groupId>
      <scope>test</scope>
      <version>${spring-test.version}</version>
    </dependency>
    <!--region Description
    <dependency>
      <artifactId>jaxp-api</artifactId>
      <groupId>javax.xml</groupId>
      <version>${jaxp.version}</version>
    </dependency>
    endregion-->
    <dependency>
      <artifactId>lombok</artifactId>
      <groupId>org.projectlombok</groupId>
      <scope>provided</scope>
      <version>${lombok.version}</version>
    </dependency>


    <!-- this dependency is needed to create parameterized tests -->
    <dependency>
      <artifactId>junit-jupiter-params</artifactId>
      <groupId>org.junit.jupiter</groupId>
      <scope>test</scope>
      <version>${junit-jupiter-version}</version>
    </dependency>

    <!-- contains the engine that actually runs the Jupiter-tests -->
    <dependency>
      <artifactId>junit-jupiter-engine</artifactId>
      <groupId>org.junit.jupiter</groupId>
      <scope>test</scope>
      <version>${junit-jupiter-version}</version>
    </dependency>

    <!-- other test libraries work out of the box. e.g. ... -->
    <dependency>
      <!-- ... AssertJ ... -->
      <artifactId>assertj-core</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>byte-buddy</artifactId>
          <groupId>net.bytebuddy</groupId>
        </exclusion>
      </exclusions>
      <groupId>org.assertj</groupId>
      <scope>test</scope>
      <version>${aspectj.version}</version>
    </dependency>
    <dependency>
      <!-- ... or Mockito ... -->
      <artifactId>mockito-core</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>byte-buddy</artifactId>
          <groupId>net.bytebuddy</groupId>
        </exclusion>
      </exclusions>
      <groupId>org.mockito</groupId>
      <scope>test</scope>
      <version>${mokito.version}</version>
    </dependency>
    <dependency>
      <artifactId>byte-buddy</artifactId>
      <groupId>net.bytebuddy</groupId>
      <scope>test</scope>
      <version>1.14.13</version>

    </dependency>
    <!-- still, some benefit from additional support-->
    <dependency>
      <artifactId>mockito-junit-jupiter</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>junit-jupiter</artifactId>
          <groupId>org.junit.jupiter</groupId>
        </exclusion>
        <exclusion>
          <artifactId>junit-jupiter-api</artifactId>
          <groupId>org.junit.jupiter</groupId>
        </exclusion>
      </exclusions>
      <groupId>org.mockito</groupId>
      <scope>test</scope>
      <version>${mokito.version}</version>
    </dependency>

    <dependency>
      <artifactId>junit-jupiter</artifactId>
      <groupId>org.junit.jupiter</groupId>
      <scope>test</scope>
      <version>${jupiter.version}</version>
    </dependency>
    <dependency>
      <artifactId>jakarta.validation-api</artifactId>
      <groupId>jakarta.validation</groupId>
      <version>${validation.api.version}</version>
    </dependency>
    <dependency>
      <artifactId>hibernate-validator</artifactId>
      <groupId>org.hibernate.validator</groupId>
      <version>${hibernate.validator.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.glassfish/jakarta.el -->
    <dependency>
      <artifactId>jakarta.el</artifactId>
      <groupId>org.glassfish</groupId>
      <scope>test</scope>
      <version>5.0.0-M1</version>
    </dependency>
    <dependency>
      <artifactId>logback-core</artifactId>
      <groupId>ch.qos.logback</groupId>
      <version>${logback.version}</version>
    </dependency>

    <dependency>
      <artifactId>slf4j-api</artifactId>
      <groupId>org.slf4j</groupId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <artifactId>logback-classic</artifactId>
      <groupId>ch.qos.logback</groupId>
      <version>${logback.classic.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-javadoc-plugin -->
    <dependency>
      <artifactId>maven-javadoc-plugin</artifactId>
      <groupId>org.apache.maven.plugins</groupId>
      <version>3.6.3</version>
    </dependency>


  </dependencies>
  <dependencyManagement>

  </dependencyManagement>

  <description>Ce projet représente une librairie de Gestion de Blog basé sur XML.
    voir Blah blah blah [www.coolsite.example this is a cool site]   pour plus d'infos sur la gestion XML et JAVA
  </description>
  <modelVersion>4.0.0</modelVersion>
  <name>XMLBlog</name>
  <!-- Site DESC-->
  <parent>
    <artifactId>POMSitePersonnel</artifactId>
    <groupId>com.mor.web.sitePersonnel</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <properties>
    <aspectj.version>3.23.1</aspectj.version>
    <checkstyle.config.location>${project.basedir}\src\main\resources\checkstyle-rules.xml
    </checkstyle.config.location>

    <checkstyle.suppressions.Location>src/main/resources/suppressions.xml
    </checkstyle.suppressions.Location>
    <commons.io.version>2.15.1</commons.io.version>
    <commons.lang.version>2.6</commons.lang.version>
    <dom4j.version>2.1.4</dom4j.version>
    <hibernate.validator.version>8.0.0.Final</hibernate.validator.version>
    <jacoco.version>0.8.11</jacoco.version>
    <jaxp.version>1.4.2</jaxp.version>
    <junit-jupiter-version>5.10.0</junit-jupiter-version>
    <jupiter.version>5.10.0</jupiter.version>
    <license.dir>${basedir}</license.dir>
    <logback.classic.version>1.4.14</logback.classic.version>
    <logback.version>1.5.13</logback.version>
    <lombok.version>1.18.30</lombok.version>
    <maven-jxr-plugin.version>3.3.2</maven-jxr-plugin.version>
    <maven.compiler.plugin.source>21</maven.compiler.plugin.source>
    <maven.compiler.plugin.target>21</maven.compiler.plugin.target>
    <maven.compiler.plugin.version>3.11.0</maven.compiler.plugin.version>
    <maven.pmd.plugin.version>3.21.2</maven.pmd.plugin.version>
    <mokito.version>4.8.1</mokito.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.version>${project.version}</project.version>
    <slf4j.provider.version>2.0.12</slf4j.provider.version>
    <slf4j.version>2.0.7</slf4j.version>
    <spring-test.version>6.1.3</spring-test.version>
    <validation.api.version>3.0.2</validation.api.version>

  </properties>
  <!-- //Site DESC-->
  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <show>public</show>
          <stylesheetfile>${basedir}/src/main/javadoc/stylesheet.css</stylesheetfile>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.6.3</version>
      </plugin>
      <plugin>
        <artifactId>maven-jxr-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
        <version>${maven-jxr-plugin.version}</version>
      </plugin>
      <plugin>
        <artifactId>jacoco-maven-plugin</artifactId>
        <groupId>org.jacoco</groupId>
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
        <version>${jacoco.version}</version>
      </plugin>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>

          <suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
          <suppressionsLocation>${basedir}/src/main/resources/suppressions.xml
          </suppressionsLocation>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>

            </reports>
          </reportSet>
        </reportSets>
        <version>3.2.0</version>
      </plugin>

      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
        <version>${maven.pmd.plugin.version}</version>
      </plugin>


    </plugins>
  </reporting>
  <url>https://maven.apache.org</url>
  <version>1.0-RELEASE</version>
</project>
