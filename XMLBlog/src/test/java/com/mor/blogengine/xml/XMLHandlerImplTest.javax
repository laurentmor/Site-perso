/*
 * Copyright (c) 2024
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 */

package com.mor.blogengine.xml;

import static org.junit.jupiter.api.Assertions.assertNotNull;

import com.mor.test.XMLConsumingTestCase;
import java.lang.reflect.Field;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class XMLHandlerImplTest extends XMLConsumingTestCase {

  @BeforeEach
  void clean() {
    try {
      Field instance = XMLHandlerImpl.class.getDeclaredField("instance");
      instance.setAccessible(true);
      instance.set(null, null);
      getLog().info("Nullified XMLHandlerImpl mInstance" + instance);
    } catch (NoSuchFieldException
        | SecurityException
        | IllegalArgumentException
        | IllegalAccessException ex) {
      Logger.getLogger(XMLHandlerImplTest.class.getName()).log(Level.SEVERE, null, ex);
    }
  }

  @Test
  void getInstanceForDoc() {

    assertNotNull(XMLHandlerImpl.getInstanceForDoc(mConfig, getBlogDocument()));
  }

  @Test
  void getInstanceForDocSingleton() {
    XMLHandlerImpl.getInstanceForDoc(mConfig, getBlogDocument());
    assertNotNull(XMLHandlerImpl.getInstanceForDoc(mConfig, getBlogDocument()));
  }

  @Test
  void add() {
    // XMLHandlerImpl.getInstanceForDoc(mConfig,getBlogDocument()).add(null)
  }
}
