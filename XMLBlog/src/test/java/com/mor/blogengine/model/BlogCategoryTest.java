/** * Copyright 2021 Laurent * <p> * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * <p> * http://www.apache.org/licenses/LICENSE-2.0 * <p> * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. * <p> * Copyright 2021 Laurent * <p> * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * <p> * http://www.apache.org/licenses/LICENSE-2.0 * <p> * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. * <p> * Copyright 2021 Laurent * <p> * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * <p> * http://www.apache.org/licenses/LICENSE-2.0 * <p> * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. *//* * The MIT License * * Copyright 2015 Laurent Morissette. * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. */package com.mor.blogengine.model;import com.mor.test.PropertiesConsumingTestCase;import org.dom4j.tree.DefaultElement;import org.junit.jupiter.api.Assertions;import org.junit.jupiter.api.DisplayName;import org.junit.jupiter.api.Test;import static org.junit.jupiter.api.Assertions.*;/** * * @author laurent */@SuppressWarnings("ConstantValue")public class BlogCategoryTest extends PropertiesConsumingTestCase {    public BlogCategoryTest() {        super();    }    @Test    @DisplayName("BlogCategory test with default constructor")    public void defaultConstructor() {        BlogCategory bc = new BlogCategory();        assertNull(bc.getCatName());    }    @Test    @DisplayName("BlogCategory test without description")    public void categoryNoDescription() {        BlogCategory category = new BlogCategory("test sans description");        assertEquals("test sans description", category.toString());    }    @Test    @DisplayName("BlogCategory test with description")    public void categoryWithDescription() {        BlogCategory category = new BlogCategory("Category",                "Description");        assertEquals("Name: Category Description: Description", category.toString());    }    @Test()    @DisplayName("BlogCategory test without name")    public void categoryNoName() {        Exception e = assertThrows(IllegalArgumentException.class, () -> new BlogCategory(null, "test"));        Assertions.assertEquals("Name is required", e.getMessage());    }    @Test()    @DisplayName("BlogCategory test with NULL DefaultElement")    public void categoryWithNullDefaultElement() {      assertThrows(IllegalArgumentException.class, () -> {            DefaultElement de = null;            new BlogCategory(de);        });    }}