/*  * The MIT License * * Copyright 2015 Laurent Morissette. * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. */package com.mor.blogengine.model;import com.mor.test.PropertiesConsumingTestCase;import org.dom4j.tree.DefaultElement;import static org.junit.Assert.assertEquals;import static org.junit.Assert.assertNull;import org.junit.Test;/** * * @author laurent */public class BlogCategoryTest extends PropertiesConsumingTestCase {    @Test    public void categorieSansParametres() {        BlogCategory bc = new BlogCategory();        assertNull(bc.getCatName());    }    @Test    public void categorieSansDescription() {        BlogCategory category = new BlogCategory("test sans description");        assertEquals("test sans description", category.toString());    }        @Test    public void categorieAvecDescription() {        BlogCategory category = new BlogCategory("Category",                "Description");        assertEquals("Name: Category Description: Description", category.toString());    }    @Test(expected = IllegalArgumentException.class)    public void categorieSansNom() {        BlogCategory blogCategory = new BlogCategory(null, "test");    }        @Test(expected = IllegalArgumentException.class)    public void categorieAvecElementNull(){        DefaultElement de=null;    BlogCategory blogCategory=new BlogCategory(de);    }}