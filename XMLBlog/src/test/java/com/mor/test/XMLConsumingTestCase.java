/* * Copyright (c) 2024 * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. * * */package com.mor.test;import java.io.File;import java.io.IOException;import java.io.RandomAccessFile;import java.util.logging.Level;import java.util.logging.Logger;import org.apache.commons.io.FileUtils;import org.dom4j.Document;import org.dom4j.DocumentException;import org.dom4j.DocumentHelper;/** Super class for tests using XML. */public abstract class XMLConsumingTestCase extends PropertiesConsumingTestCase {  /** source to lock for I/0 failure test. */  protected RandomAccessFile lockedSource;  /** Default constructor. */  public XMLConsumingTestCase() {    super();  }  /**   * Get default doc.   *   * @return doc   */  public static Document getDefautDocument() {    try {      return DocumentHelper.parseText("<root></root>");    } catch (DocumentException ex) {      Logger.getLogger(XMLConsumingTestCase.class.getName()).log(Level.SEVERE, null, ex);    }    return null;  }  /**   * Get test Document.   *   * @return doc   */  public static Document getBlogDocument() {    String docText =        """        <?xml version="1.0" encoding="UTF-8"?>        <!--Sample XML file generated by XMLSpy v2009 sp1 (https://www.altova.com)-->        <Blog xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="blog.xsd">            <Entry date="2004-09-09" ID="ID_152369776" categoryID="ID_1222333" allowComments="false" >              \s                <Text>                    test entry !                </Text>                <Resume>                    feed                </Resume>                <Comment ID="ID_1476476016" date="Mon Nov 23 00:00:00 EST 2009" entryID="ID_152369776" author="Mike" webPage="no page">                    <CommentText>Hi HI</CommentText>                </Comment>            </Entry>            <Category name="test" ID="ID_1222333"/>            <Category ID="ID_320524799" name="added" description=""/>            <Category ID="ID_-492027613" name="remove" description=""/>        </Blog>""";    try {      return DocumentHelper.parseText(docText);    } catch (DocumentException ex) {      Logger.getLogger(XMLConsumingTestCase.class.getName()).log(Level.SEVERE, null, ex);    }    return null;  }  /**   * lock file for test.   *   * @throws IOException if there is I/O issues   */  public final void lockFile() throws IOException {    // locking file before write causes the needed IOException    File file = FileUtils.getFile(mConfig.getProperty("datasource.xml"));    lockedSource = new RandomAccessFile(file, "rw");    lockedSource.getChannel().lock();  }}