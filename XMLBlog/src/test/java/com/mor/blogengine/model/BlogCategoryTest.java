/* * Copyright (c) 2024 * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. * * */package com.mor.blogengine.model;import static org.junit.jupiter.api.Assertions.assertEquals;import static org.junit.jupiter.api.Assertions.assertThrows;import com.mor.test.PropertiesConsumingTestCase;import org.dom4j.tree.DefaultElement;import org.junit.jupiter.api.DisplayName;import org.junit.jupiter.api.Test;/** * Category entity test. * * @author laurent */public class BlogCategoryTest extends PropertiesConsumingTestCase {  /** Default constructor. */  public BlogCategoryTest() {    super();  }  /** BlogCategory test with default constructor. */  @Test  @DisplayName("BlogCategory test with default constructor")  public void defaultConstructor() {    BlogCategory bc = new BlogCategory();    assertEquals("Default", bc.getName());  }  /** BlogCategory test without description. */  @Test  @DisplayName("BlogCategory test without description")  public void categoryNoDescription() {    BlogCategory category = new BlogCategory("test sans description");    assertEquals("test sans description", category.toString());  }  /** BlogCategory test with description. */  @Test  @DisplayName("BlogCategory test with description")  public void categoryWithDescription() {    BlogCategory category = new BlogCategory("Category", "Description");    assertEquals("Name: Category Description: Description", category.toString());  }  /** BlogCategory test with NULL DefaultElement. */  @Test()  @DisplayName("BlogCategory test with NULL DefaultElement")  public void categoryWithNullDefaultElement() {    assertThrows(        IllegalArgumentException.class,        () -> {          DefaultElement de = null;          new BlogCategory(de);        });  }}