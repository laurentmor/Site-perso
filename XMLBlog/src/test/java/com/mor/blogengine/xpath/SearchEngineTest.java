/* * Copyright (c) 2024 * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. * * */package com.mor.blogengine.xpath;import static com.mor.blogengine.xpath.SearchEngine.getInstanceForDoc;import static org.junit.jupiter.api.Assertions.assertEquals;import static org.junit.jupiter.api.Assertions.assertThrows;import com.mor.test.XMLConsumingTestCase;import java.lang.reflect.Field;import java.util.logging.Level;import java.util.logging.Logger;import org.junit.jupiter.api.BeforeEach;import org.junit.jupiter.api.DisplayName;import org.junit.jupiter.api.Test;/** * @author laurent */@DisplayName("Search Engine Test")class SearchEngineTest extends XMLConsumingTestCase {  public SearchEngineTest() {    super();  }  @BeforeEach  void clean() {    try {      Field instance = SearchEngine.class.getDeclaredField("mInstance");      instance.setAccessible(true);      instance.set(null, null);    } catch (NoSuchFieldException | SecurityException | IllegalArgumentException |             IllegalAccessException ex) {      Logger.getLogger(SearchEngineTest.class.getName()).log(Level.SEVERE, null, ex);    }  }  @Test  @DisplayName("Init Sans Doc")  void initSansDoc() {    Exception e = assertThrows(NullPointerException.class, () -> getInstanceForDoc(null, null));    assertEquals("Properties null or not loaded", e.getMessage());  }  @Test  @DisplayName("Init Avec Doc")  void initAvecDoc() {    Exception e = assertThrows(NullPointerException.class,        () -> getInstanceForDoc(null, getBlogDocument()));    assertEquals("Properties null or not loaded", e.getMessage());  }  @Test  @DisplayName("Init Avec Config Sans Doc")  void initAvecConfigSansDoc() {    assertThrows(IllegalArgumentException.class, () -> getInstanceForDoc(mConfig, null));  }  @Test  @DisplayName("Ini Correct")  void iniCorrect() {    getInstanceForDoc(mConfig, getBlogDocument());  }}